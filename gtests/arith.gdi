# test arithmetic operators and numeric coercion
#%#% chopped down from Icon arith.icn test

procedure main()

   numtest(0, 0)
   numtest(0, 1)
   numtest(0, -1)
   numtest(1, 0)
   numtest(1, 1)
   numtest(1, 2)
   numtest(7, 3)
   numtest(3, 8)
   numtest(6.2, 4)
   numtest(8, 2.5)
   numtest(5.4, 1.2)
   numtest("1", 2.5)
   numtest("3.4", 1.7)
   numtest("5", " 5")
   numtest(0., 0.)
   numtest(0., 1.)
   numtest(0., -1.)
   numtest(1, -2)
   numtest(1., -2.)
   numtest(-3, 2)
   numtest(-3., "2.")
   numtest(-6, -3)
   numtest(-6., -3.)
   write()

   every pow(-3 to 3, -3 to 3)
   every pow(.5 | 1 | 1.5, (-3 to 3) / 2.0)
   every pow(-1.5 | -1.0 | -.5 | 0.0, -3 to 3)
end

procedure numtest(a, b)
   wr5(+a)
   wr5(b)
   wr5(abs(a))
   wr5(-b)
   wr5(a + b)
   wr5(a - b)
   wr5(a * b)
   if b ~= 0 then wr5(a / b) else wr5("---")
   if b ~= 0 then wr5(a % b) else wr5("---")
   wr5(-b)
   wr5(a < b  | "---")
   wr5(a <= b | "---")
   wr5(a = b  | "---")
   wr5(a ~= b | "---")
   wr5(a >= b | "---")
   wr5(a > b  | "---")
   write()
   return
end

procedure wr5(n)			# write in 5 chars
   local s
   s := n || ""
   printf(" %4s", s)
   return
end

procedure pow(m, n)
   local v

   if m = 0 & n <= 0 then
      fail
   v := m ^ n
   printf("%f ^ %f = %f\n", m, n, v)
   return
end
