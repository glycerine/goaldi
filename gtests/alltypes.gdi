#SRC: Goaldi original
#
#  Show examples of all types

global format
global examples

record P(x,y)

procedure P.xy() { return self.x * self.y }

procedure main() {
	examples := table()
	format := "%-13s %-13s %-9v %-22s %v\n"
	write()
	printf(format, "global", "type", "string", "image", "external")
	printf(format, "------", "----", "------", "-----", "--------")
	show(, nil)
	show(type, type())
	show(number, 17)
	show(number, %pi)
	show(number, 6.02214129e23)
	show(string, "abcd")
	show(file, %stdin)
	show(channel, channel(3))
	show(constructor, P)
	show(methodvalue, P().xy)
	show(, show)
	show(list, [2,3,5,7,11])
	show(table, table(){"Fe":"Iron","Au":"Gold"})
	show(P, P(7,5))
	show(, tuple(w:6,h:4))
	show(external, duration(3600+120+3))
	write()
	write("Sorting values of mixed types:")
	every ^kv := !examples.sort(2) do
		printf("%16s  %s\n", kv.key, image(kv.value))
	write()
	write("Sorting the types themselves:")
	every kv := !examples.sort(1) do
		printf("%16s  %s\n", kv.key, image(kv.value))
	write()
}

procedure show(g, v) {
	^t := type(v)
	examples[t] := v
	^s := string(v)
	^i := image(v)
	^x := external(v)
	if string(x)[1+:2] == "0x" then 	# if hex address
		x := "0xXXXXXX"					# hide actual value for reproducibility
	printf(format, (t === g) | "", t, s, i, x)
}
