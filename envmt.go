//  envmt.go -- dynamic variables and procedure environment

package goaldi

//  execution environment
type Env struct {
	//#%#% to be determined
	//#%#% dynamic variables?
	//#%#% thread id for monitoring?
	VarMap map[string]Value
}

//  StdEnv is the initial environment
var StdEnv = make(map[string]Value)

//  EnvInit registers a standard environment value or variable at init time.
//  (Variables should be registered as trapped values).
func EnvInit(name string, v Value) {
	StdEnv[name] = v
}

//  Initial values and variables
func init() {

	// nil
	EnvInit("nil", NilValue)
	EnvInit("null", NilValue) // generated by front end

	// math constants
	EnvInit("e", E)
	EnvInit("phi", PHI)
	EnvInit("pi", PI)

	// standard files (mutable)
	EnvInit("stdin", Trapped(&STDIN))
	EnvInit("stdout", Trapped(&STDOUT))
	EnvInit("stderr", Trapped(&STDERR))

	// #%#% alternate names for the same standard files?
	EnvInit("input", Trapped(&STDIN))
	EnvInit("output", Trapped(&STDOUT))
	EnvInit("errout", Trapped(&STDERR))
}
